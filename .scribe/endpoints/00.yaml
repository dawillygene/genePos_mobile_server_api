name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/google
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Google OAuth Login'
      description: 'Authenticate using Google OAuth ID token.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id_token:
        name: id_token
        description: 'Google ID token.'
        required: true
        example: eyJhbGciOiJSUzI1NiIsImtpZCI6...
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      id_token: eyJhbGciOiJSUzI1NiIsImtpZCI6...
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "google_id": "123456789",
              "role": "owner",
              "shop_id": null,
              "is_active": true,
              "created_at": "2025-08-03T19:44:13.000000Z"
            },
            "token": "1|laravel_sanctum_token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Invalid ID token"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register User'
      description: "Register a new user with email and password. Default role is 'owner'."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password (minimum 8 characters)."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'optional User role (owner or sales_person). Default: owner.'
        required: false
        example: owner
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: password123
      role: owner
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "User registered successfully",
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "role": "owner",
              "shop_id": null,
              "is_active": true,
              "created_at": "2025-08-03T19:44:13.000000Z"
            },
            "token": "1|laravel_sanctum_token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"email": ["The email has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login with Email/Password'
      description: 'Authenticate using email and password credentials.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Login successful",
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "role": "owner",
              "shop_id": 1,
              "is_active": true,
              "last_login_at": "2025-08-03T22:30:15.000000Z"
            },
            "token": "1|laravel_sanctum_token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "Account is deactivated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"email": ["The provided credentials are incorrect."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: 'Revoke the current access token.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Logged out successfully"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Current User'
      description: "Get the authenticated user's information."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "role": "owner",
              "shop_id": 1,
              "is_active": true,
              "created_at": "2025-08-03T19:44:13.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
